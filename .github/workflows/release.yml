name: go-release-build
on:
  push:
    tags:
      - "*"

jobs:
  build:
    name: release-build
    runs-on: ubuntu-latest
    steps:
      - uses: olegtarasov/get-tag@v2.1
        id: tagName

      - name: setup golang
        uses: actions/setup-go@v1
        with:
          go-version: 1.16
        id: go

      - name: checkout
        uses: actions/checkout@v2

      - name: run unit tests
        run: go test -v ./... -race

      - name: Get appName
        id: appname
        uses: notiz-dev/github-action-json-property@release
        with: 
            path: 'app.json'
            prop_path: 'appName'

      - name: Get app description
        id: app-description
        uses: notiz-dev/github-action-json-property@release
        with: 
            path: 'app.json'
            prop_path: 'appDescription'

      - name: build
        run: bash build.sh
        env:
          VERSION: ${{ steps.tagName.outputs.tag }}
          APPNAME: ${{ steps.appname.outputs.prop }} 
          APPDESCRIPTION: ${{ steps.app-description.outputs.prop }} 

      - name: create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
